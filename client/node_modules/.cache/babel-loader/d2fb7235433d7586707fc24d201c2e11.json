{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanm\\\\Lambda\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\ColorList.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; //utils\n\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const [colorToAdd, setColorToAdd] = useState(initialColor);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  }; // const addColor = (e) => {\n  //   e.preventDefault();\n  //   setColorToAdd({\n  //     color: '',\n  //     code: { hex: '' },\n  //   });\n  //   axiosWithAuth()\n  //     .post(`http//:localhost/5000/api//colors`, colorToAdd)\n  //     .then((res) => {\n  //       axiosWithAuth()\n  //         .get(`http//:localhost/5000/api//colors`)\n  //         .then((res) => {\n  //           updateColors(res.data)\n  //         })\n  //         .catch(error => console.log(error))\n  //     })\n  //     .catch(error => console.log(error))\n  // };\n\n\n  const saveEdit = e => {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n\n    axiosWithAuth().put(`http://localhost:5000/api/colors/${colorToEdit.id}`, colorToEdit).then(response => {\n      console.log(response);\n      axiosWithAuth().get('http://localhost:5000/api/colors').then(response => {\n        updateColors(response.data);\n      }).catch(error => console.log(error));\n    }).catch(error => console.log(error));\n  };\n\n  const deleteColor = color => {\n    // make a delete request to delete this color\n    axiosWithAuth().delete(`http://localhost:5000/api/colors/${color.id}`).then(response => {\n      console.log(response);\n      updateColors(colors.filter(colorId => colorId.id !== color.id));\n    }).catch(error => console.log(error));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, console.log(\"colors\", colors), colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["C:/Users/ryanm/Lambda/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axios","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","console","log","editing","setEditing","colorToEdit","setColorToEdit","colorToAdd","setColorToAdd","editColor","saveEdit","e","preventDefault","put","id","then","response","get","data","catch","error","deleteColor","delete","filter","colorId","map","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//utils\r\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\r\n\r\nconst initialColor = {\r\n  color: \"\",\r\n  code: { hex: \"\" }\r\n};\r\n\r\nconst ColorList = ({ colors, updateColors }) => {\r\n  console.log(colors);\r\n  const [editing, setEditing] = useState(false);\r\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\r\n  const [colorToAdd, setColorToAdd] = useState(initialColor);\r\n\r\n  const editColor = color => {\r\n    setEditing(true);\r\n    setColorToEdit(color);\r\n  };\r\n\r\n  // const addColor = (e) => {\r\n  //   e.preventDefault();\r\n  //   setColorToAdd({\r\n  //     color: '',\r\n  //     code: { hex: '' },\r\n  //   });\r\n  //   axiosWithAuth()\r\n  //     .post(`http//:localhost/5000/api//colors`, colorToAdd)\r\n  //     .then((res) => {\r\n  //       axiosWithAuth()\r\n  //         .get(`http//:localhost/5000/api//colors`)\r\n  //         .then((res) => {\r\n  //           updateColors(res.data)\r\n  //         })\r\n  //         .catch(error => console.log(error))\r\n  //     })\r\n  //     .catch(error => console.log(error))\r\n  // };\r\n\r\n  const saveEdit = e => {\r\n    e.preventDefault();\r\n    // Make a put request to save your updated color\r\n    // think about where will you get the id from...\r\n    // where is is saved right now?\r\n    axiosWithAuth().put(`http://localhost:5000/api/colors/${colorToEdit.id}`, colorToEdit)\r\n    .then(response => {\r\n      console.log(response)\r\n      axiosWithAuth().get('http://localhost:5000/api/colors')\r\n      .then(response => {updateColors(response.data)})\r\n      .catch(error => console.log(error))\r\n    })\r\n    .catch(error => console.log(error))\r\n  };\r\n\r\n  const deleteColor = color => {\r\n    // make a delete request to delete this color\r\n    axiosWithAuth().delete(`http://localhost:5000/api/colors/${color.id}`)\r\n    .then(response => {\r\n      console.log(response)\r\n      updateColors(colors.filter(colorId => colorId.id !== color.id ))\r\n    })\r\n    .catch(error => console.log(error))\r\n  };\r\n\r\n  return (\r\n    <div className=\"colors-wrap\">\r\n      <p>colors</p>\r\n      <ul>\r\n        {console.log(\"colors\", colors)}\r\n        {colors.map(color => (\r\n          <li key={color.color} onClick={() => editColor(color)}>\r\n            <span>\r\n              <span className=\"delete\" onClick={e => {\r\n                    e.stopPropagation();\r\n                    deleteColor(color)\r\n                  }\r\n                }>\r\n                  x\r\n              </span>{\" \"}\r\n              {color.color}\r\n            </span>\r\n            <div\r\n              className=\"color-box\"\r\n              style={{ backgroundColor: color.code.hex }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editing && (\r\n        <form onSubmit={saveEdit}>\r\n          <legend>edit color</legend>\r\n          <label>\r\n            color name:\r\n            <input\r\n              onChange={e =>\r\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\r\n              }\r\n              value={colorToEdit.color}\r\n            />\r\n          </label>\r\n          <label>\r\n            hex code:\r\n            <input\r\n              onChange={e =>\r\n                setColorToEdit({\r\n                  ...colorToEdit,\r\n                  code: { hex: e.target.value }\r\n                })\r\n              }\r\n              value={colorToEdit.code.hex}\r\n            />\r\n          </label>\r\n          <div className=\"button-row\">\r\n            <button type=\"submit\">save</button>\r\n            <button onClick={() => setEditing(false)}>cancel</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      <div className=\"spacer\" />\r\n      {/* stretch - build another form here to add a color */}\r\n      {/* <form onSubmit={addColor}>\r\n        <legend>add color</legend>\r\n        <label>\r\n          color name:\r\n          <input\r\n            onChange={(e) =>\r\n              setColorToAdd({ ...colorToAdd, color: e.target.value })\r\n            }\r\n            value={colorToAdd.color}\r\n          />\r\n        </label>\r\n        <label>\r\n          hex code:\r\n          <input\r\n            onChange={(e) =>\r\n              setColorToAdd({\r\n                ...colorToAdd,\r\n                code: { hex: e.target.value },\r\n              })\r\n            }\r\n            value={colorToAdd.code.hex}\r\n          />\r\n        </label>\r\n        <div className=\"button-row\">\r\n          <button type=\"submit\">add</button>\r\n          <button onClick={() => setEditing(false)}>cancel</button>\r\n        </div>\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorList;\r\n"]},"metadata":{},"sourceType":"module"}